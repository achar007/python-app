name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'source/**'
      - '.github/workflows/docker-image.yml'

  pull_request:
    branches: [main]
    paths:
      - 'source/**'
      - '.github/workflows/docker-image.yml'

jobs:

  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set Docker image tag
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag achar007/python-app:${{ env.IMAGE_TAG }}

      - name: Push Docker image to Docker Hub
        run: docker push achar007/python-app:${{ env.IMAGE_TAG }}

    outputs:
      image_id: ${{ env.IMAGE_TAG }}

  cd:
    runs-on: self-hosted
    needs: ci

    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Git pull with rebase (before changing values.yaml)
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git pull --rebase origin main

      - name: Update image tag in values.yaml
        run: |
          echo "Using tag: ${{ needs.ci.outputs.image_id }}"
          yq -i '.image.tag = "${{ needs.ci.outputs.image_id }}"' charts/python-app/values.yaml

      - name: Commit and push changes
        uses: endbug/add-and-commit@v9
        with:
          message: "Update image tag to ${{ needs.ci.outputs.image_id }}"
          add: .
          push: true
          fetch: --tags --force

      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Argo CD app sync
        run: |
          argocd login argocd-server.argocd --insecure --grpc-web \
            --username admin \
            --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd app sync argocd/python-app
